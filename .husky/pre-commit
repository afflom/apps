#!/bin/sh

echo "Running essential checks before commit..."
npm run lint && npm run typecheck

if [ $? -ne 0 ]; then
  echo "❌ Linting or type checking failed. Please fix the issues before committing."
  exit 1
fi

# Check if commit message contains [skip claude]
COMMIT_MSG_FILE=$(git rev-parse --git-dir)/COMMIT_EDITMSG
if [ -f "$COMMIT_MSG_FILE" ] && grep -q "\[skip claude\]" "$COMMIT_MSG_FILE"; then
  echo "⚠️ Skipping Claude review as requested in commit message"
  exit 0
fi

echo "Checking for stub implementations and weak tests with Claude..."
echo "This is required for all commits."

# Ensure Claude CLI is installed - use full path if needed
if ! command -v claude &> /dev/null; then
  # Try finding claude in known locations
  CLAUDE_PATH=""
  for path in "/home/codespace/nvm/current/bin/claude" "node_modules/.bin/claude" "/usr/local/bin/claude"; do
    if [ -x "$path" ]; then
      CLAUDE_PATH="$path"
      break
    fi
  done

  if [ -z "$CLAUDE_PATH" ]; then
    echo "❌ Claude CLI not found. Claude review is mandatory."
    echo "Please install Claude CLI before committing:"
    echo "npm install -g @anthropic-ai/claude-code"
    exit 1
  else
    echo "Using Claude at $CLAUDE_PATH"
    alias claude="$CLAUDE_PATH"
  fi
fi

# Get the list of staged files
STAGED_FILES=$(git diff --name-only --cached --diff-filter=ACMR | grep -E '\.(ts|tsx|js|jsx)$')

if [ -z "$STAGED_FILES" ]; then
  echo "No JavaScript/TypeScript files staged for commit. Still running Claude review."
fi

# Create a temporary file for Claude's response
TEMP_FILE=$(mktemp)

# Prepare a simplified prompt for Claude
echo "
Analyze the following code for:
1. TODO/FIXME comments
2. Console.log statements
3. Commented-out code
4. Stub implementations
5. Hardcoded mock data
6. Incomplete error handling
7. Weak tests

If issues are found, reply with: {\"status\": \"fail\", \"issues\": [{\"file\": \"filename.ts\", \"line\": 42, \"type\": \"todo\", \"description\": \"brief description\"}]}
If no issues, reply with: {\"status\": \"pass\"}
" > $TEMP_FILE

# Add the content of staged files to the prompt
echo "\nStaged files for review:\n" >> $TEMP_FILE

for FILE in $STAGED_FILES; do
  if [ -f "$FILE" ]; then
    echo "\n### File: $FILE\n" >> $TEMP_FILE
    git show ":$FILE" >> $TEMP_FILE
  fi
done

# Remove redundant check since we already verified Claude is installed

# Add more context from project to improve Claude's understanding
echo "\n### Project Context:\n" >> $TEMP_FILE
echo "This is a TypeScript PWA template project with GitHub Pages deployment." >> $TEMP_FILE
echo "Focus on identifying any unimplemented or stubbed functionality that would make the template incomplete." >> $TEMP_FILE

# Use echo to pipe content to Claude
if [ -n "$CLAUDE_PATH" ]; then
  CLAUDE_RESPONSE=$(cat $TEMP_FILE | "$CLAUDE_PATH" --print 2>/dev/null || echo '{"status": "error", "message": "Failed to run Claude"}')
else
  CLAUDE_RESPONSE=$(cat $TEMP_FILE | claude --print 2>/dev/null || echo '{"status": "error", "message": "Failed to run Claude"}')
fi

# Check if Claude execution failed
if [ $? -ne 0 ]; then
  echo "❌ Claude execution failed. Cannot proceed with commit."
  echo "Please check your Anthropic API key or Claude CLI installation."
  echo "Fix the Claude setup before committing."
  rm $TEMP_FILE
  exit 1
fi

# Ensure we start with a clean output file
rm -f /tmp/claude_review_output.txt

# Check Claude's response
echo "$CLAUDE_RESPONSE" > /tmp/claude_review_output.txt
echo "DEBUG: Wrote response to /tmp/claude_review_output.txt"

# Check if we have actual staged files to analyze
if [ -z "$STAGED_FILES" ]; then
  echo "✅ No relevant files to check. Skipping Claude review."
  rm -f /tmp/claude_review_output.txt
  exit 0
fi

if grep -q '"status": "pass"' /tmp/claude_review_output.txt; then
  echo "✅ Claude review passed. No issues found."
else
  echo "❌ Claude found potential issues in your code:"
  cat /tmp/claude_review_output.txt

  # Try to parse as JSON if it appears to be JSON
  if grep -q '{' /tmp/claude_review_output.txt; then
    if grep -q '"status": "fail"' /tmp/claude_review_output.txt; then
      echo "Claude found the following issues:"
      cat /tmp/claude_review_output.txt | jq -r '.issues[] | "- \(.file):\(.line) [\(.type)] \(.description)"' 2>/dev/null || true
    fi
  fi
  
  echo ""
  echo "Commit aborted. Claude review detected issues that must be fixed."
  echo "Please address all issues before committing."
  rm $TEMP_FILE
  exit 1
fi

# Clean up
rm $TEMP_FILE

echo "Proceeding with commit..."